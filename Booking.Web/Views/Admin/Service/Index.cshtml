@{
    ViewBag.Title = "Index";
}

@using Booking.Web.Models
@using Booking.Web.Models.Admin
@using Booking.Web.Controllers
@using System.Web.Script.Serialization;
@model ServiceBarbEmp

@{
    var serializer = new JavaScriptSerializer();
    var Model = serializer.Deserialize<ServiceBarbEmp>(ViewBag.ModelJson);
}


<h2>Barbershop</h2>
<h4>Add Service to Barbershop</h4>
@using (Html.BeginForm("AddService", "ServiceBarbEmp", FormMethod.Post, new { autocomplete = "off" }))
{

    <div class="form-group">
        <label>Service Type:</label>
        <input type="text" name="ServiceType" class="form-control" />
    </div>

    <div class="form-group">
        <label>Service Name:</label>
        <input type="text" name="ServiceName" class="form-control" />
    </div>

    <label>Barbershop Name:</label>
    <select name="BarbershopId" id="cars">
        @foreach (var barbershop in Model.barbershops)
        {
            <option value="@barbershop.Id">@barbershop.Name</option>
        }
    </select>
    <br>

    <button type="submit" class="btn btn-primary">Add Service to Barebershop</button>
}

<br>
<table border="1">
    <thead>
        <tr>
            <th>Barbershop</th>
            <th>Service Type</th>
            <th>Service Name</th>
            <th>Action</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var barbershop in Model.barbershops)
        {
            if (barbershop.Services != null)
            {
                foreach (var service in barbershop.Services)
                {
                    <tr>
                        @using (Html.BeginForm("UpdateService", "ServiceBarbEmp", FormMethod.Post))
                        {
                            <td>
                                <div class="form-group">
                                    <label>@barbershop.Name</label>
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    <input type="hidden" name="Id" value="@service.Id" />
                                    <input type="text" name="ServiceType" class="form-control" value="@service.ServiceType" />
                                </div>
                            </td>
                            <td>
                                <div class="form-group">
                                    <input type="text" name="Name" class="form-control" value="@service.Name" />
                                </div>
                            </td>

                            <td>
                                <button type="submit" class="btn btn-primary">Update</button>
                            </td>
                        }
                        <td>
                            <form action="@Url.Action("DeleteService", "ServiceBarbEmp", new { id = service.Id })" method="post">
                                <button type="submit">Delete</button>
                            </form>
                        </td>


                    </tr>
                }
            }
        }
    </tbody>
</table>

<br>
<br>

<label>Barbershop Name:</label>
<select name="BarbershopId" id="barbershop-select" onchange="showEmployees()">
    @foreach (var barbershop in Model.barbershops)
    {
        <option value="@barbershop.Id">@barbershop.Name</option>
    }
</select>
<br>


<label>Employee Name:</label>
<select name="BarbershopId" id="employee-select" onchange="showServices()">
        <option value="employee.Id">EmplyeeName</option>
</select>
<br>


<!-- Table of services -->
<div id="services-table" style="display: none;">
    <table border="1">
        <thead>
            <tr>
                <th>Service Type</th>
                <th>Service Name</th>
                <th>Checked</th>
            </tr>
        </thead>
        <tbody id="services-body">
        </tbody>
    </table>
</div>


@using (Html.BeginForm("AddService", "ServiceBarbEmp", FormMethod.Post, new { autocomplete = "off" }))
{
    <button type="submit" class="btn btn-primary">Update Employee Services</button>
}


<input type="hidden" id="model-json" value="@ViewBag.ModelJson" />

<script>
    function showServices() {
        var select = document.getElementById("barbershop-select");

        var selectedOption = select.options[select.selectedIndex];

        var barbershopId = selectedOption.value;

        var servicesTable = document.getElementById("services-table");
        var servicesBody = document.getElementById("services-body");
        // clear existing services from the table
        servicesBody.innerHTML = "";

        var modelJson = document.getElementById("model-json").value;
        var Model = JSON.parse(modelJson);


        // find the selected barbershop from the model
        var selectedBarbershop = Model.barbershops.find(b => b.Id.toString() === barbershopId);

        if (selectedBarbershop) {
            // display the services of the selected barbershop
            selectedBarbershop.Services.forEach(service => {

                var row = document.createElement("tr");
                var typeCell = document.createElement("td");
                var nameCell = document.createElement("td");
                var checkBoxCell = document.createElement("td");
                var checkBox = document.createElement("input");


                typeCell.innerHTML = service.ServiceType;
                nameCell.innerHTML = service.Name;
                checkBox.type = "checkbox";
                checkBox.name = "SelectedServices";
                checkBox.value = service.Id;
                checkBoxCell.appendChild(checkBox);


                row.appendChild(typeCell);
                row.appendChild(nameCell);
                row.appendChild(checkBoxCell);
                servicesBody.appendChild(row);
            });

            // show the services table
            servicesTable.style.display = "block";
        } else {
            // hide the services table if no barbershop is selected
            servicesTable.style.display = "none";
        }
    }

    function showEmployees() {
        var barbershopSelect = document.getElementById("barbershop-select");
        var barbershopSelectedOption = barbershopSelect.options[barbershopSelect.selectedIndex];

        var employeeSelect = document.getElementById("employee-select");

        var barbershopId = barbershopSelectedOption.value;

        var modelJson = document.getElementById("model-json").value;
        var Model = JSON.parse(modelJson);

        // find the selected barbershop from the model
        var selectedBarbershop = Model.barbershops.find(b => b.Id.toString() === barbershopId);

        if (selectedBarbershop) {
            // display the services of the selected barbershop
            employeeSelect.innerHTML = "";

            selectedBarbershop.Employees.forEach(employee => {
                var option = document.createElement("option");
                option.value = employee.Id;
                option.text = employee.FirstName;
                employeeSelect.add(option);
            });

        //    servicesTable.style.display = "block";
        } else {
            // hide the services table if no barbershop is selected
         //   servicesTable.style.display = "none";
        }
    }
</script>